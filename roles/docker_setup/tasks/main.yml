

---
  - name: Create keyrings directory
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download Docker GPG key
    get_url:
      url: https://download.docker.com/linux/debian/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: '0644'

  - name: Add docker repository
    apt_repository:
      repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable"
      state: present

  - name: Update apt cache and install docker-ce
    apt:
      name:
        - docker-ce
        - python3-pip
      state: latest
      update_cache: true

  - name: Install docker module for python
    pip:
      name: docker
      break_system_packages: true

  - name: Make sure the docker service is running
    service:
      name: docker
      state: started
      enabled: true

  - name: Create docker compose remote directory
    file:
      path: /home/docker
      state: directory

  - name: Create database volume mount
    file:
      path: /home/data/db
      state: directory

  - name: Copy docker compose work directory to remote
    copy:
      src: ../docker-setup/
      dest: /home/docker/

  - name: Clear existing docker compose services
    community.docker.docker_compose_v2:
      project_src: /home/docker
      state: absent

  - name: Run the docker compose
    community.docker.docker_compose_v2:
      project_src: /home/docker/
      wait: true
    register: docker_compose_output

  - name: Wait for WordPress container to be healthy
    community.docker.docker_container_info:
      name: wordpress
    register: wp_container_info
    until: wp_container_info.container.State.Health.Status == "healthy"
    retries: 30
    delay: 10

  - name: Install WordPress CLI in container
    community.docker.docker_container_exec:
      container: wordpress
      command: >
        bash -c "
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar &&
        php wp-cli.phar --info &&
        chmod +x wp-cli.phar &&
        mv wp-cli.phar /usr/local/bin/wp
        "

  - name: Check if WordPress is already configured
    community.docker.docker_container_exec:
      container: wordpress
      command: wp core is-installed --allow-root
      chdir: /var/www/html
    register: wp_installed
    failed_when: false
    changed_when: false

  - name: Configure WordPress core
    community.docker.docker_container_exec:
      container: wordpress
      command: >
        wp core install
        --url="{{ansible_host}}"
        --title="my website"
        --admin_user="najib"
        --admin_password="{{ wordpress_password | default('SucurePassword123!') }}"
        --admin_email="admin@example.com"
        --skip-email
        --allow-root
      chdir: /var/www/html
    when: wp_installed.rc != 0

  - name: Verify WordPress installation
    community.docker.docker_container_exec:
      container: wordpress
      command: wp core version --allow-root
      chdir: /var/www/html
    register: wp_version
    changed_when: false

  - name: Display WordPress installation status
    debug:
      msg: "WordPress {{ wp_version.stdout }} is successfully installed and configured"

services:

  ansible:
    profiles: ["site"]
    build:
      context: .
      dockerfile_inline: |
        FROM python:alpine
        RUN apk add --no-cache openssh-client sshpass
        RUN pip install ansible
        WORKDIR /ansible
    volumes:
      - ..:/ansible
      - ~/.ssh:/root/.ssh
    working_dir: /ansible
    command: ansible-playbook site.yml
    networks:
      - internalNet

  ansible_clean:
    profiles: ["clean"]
    build:
      context: .
      dockerfile_inline: |
        FROM python:alpine
        RUN apk add --no-cache openssh-client sshpass
        RUN pip install ansible
        WORKDIR /ansible
    volumes:
      - ..:/ansible
      - ~/.ssh:/root/.ssh
    working_dir: /ansible
    command: ansible-playbook clean.yml
    networks:
      - internalNet

  debian-server:
      profiles: ["test"]
      build:
        dockerfile_inline: |
          FROM debian:12
          RUN apt-get update
          RUN apt-get install -y openssh-server sudo python3 python3-pip python3-dev python3-setuptools
          RUN pip3 install --break-system-packages packaging docker
          RUN mkdir -p /run/sshd
          RUN ssh-keygen -A
          RUN useradd -m najib
          RUN echo 'najib:1111' | chpasswd
          RUN echo 'najib ALL=(ALL) ALL' >> /etc/sudoers
          RUN echo 'root:root' | chpasswd
          RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
          RUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          CMD ["/usr/sbin/sshd", "-D"]
      # image: debian_server:local
      hostname: debian
      privileged: true
      restart: always
      # deploy:
      #   mode: replicated
      #   replicas: 3
      #   restart_policy:
      #     condition: any
      ports:
        - "4044:22"
        - "9090:443"
      networks:
        - internalNet

networks:
  internalNet:
